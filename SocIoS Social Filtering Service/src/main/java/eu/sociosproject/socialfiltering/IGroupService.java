/*
 *   Copyright 2013 Cognium Systems SAS
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
package eu.sociosproject.socialfiltering;

import javax.jws.WebService;

import eu.sociosproject.sociosvoc.Group;
import eu.sociosproject.sociosvoc.GroupList;
import eu.sociosproject.sociosvoc.ObjectId;
import eu.sociosproject.sociosvoc.PersonList;

/**
 * This interface provides methods used to manage groups of users (create
 * groups, add/remove members, destroy groups).
 * 
 * @author kotelnikov
 */
@WebService
public interface IGroupService {

    /**
     * Adds new members to an existing group.
     * 
     * @param clientId the identifier of the client
     * @param people a list of people to add in the group
     * @param groupId the identifier of the group to modify
     * @return a modified {@link Group} object
     * @see #addMembers(ObjectId, PersonList, ObjectId)
     * @see #removeMembers(ObjectId, ObjectId, PersonList)
     */
    Group addMembers(ObjectId clientId, PersonList people, ObjectId groupId);

    /**
     * Creates a new group of people. This method uses a {@link Group} instance
     * to set initial name and description of the group; the identifier of the
     * group is automatically generated by this method. The returned
     * {@link Group} instance contains the initial title and description as well
     * as a generated identifier.
     * 
     * @param clientId the identifier of the client
     * @param people the initial list of group members. This list could be
     *        changed using the
     *        {@link #addMembers(ObjectId, PersonList, ObjectId)} and
     *        {@link #removeMembers(ObjectId, ObjectId, PersonList)} methods.
     * @param group the {@link Group} object containing the description of the
     *        group
     * @return a modified {@link Group} instance
     */
    Group createGroup(ObjectId clientId, PersonList people, Group group);

    /**
     * This method destroys a group with the specified identifier.
     * 
     * @param clientId the identifier of the client
     * @param groupId the identifier of the group to destroy.
     * @return <code>true</code> if a group with the specified identifier was
     *         successfully destroyed.
     */
    boolean deleteGroup(ObjectId clientId, ObjectId groupId);

    /**
     * This method returns a list of all members associated with the group with
     * the given identifier.
     * 
     * @param clientId the identifier of the client
     * @param groupId the identifier of the group
     * @return a list of all members in the group with the specified identifier
     */
    PersonList getGroupMembers(ObjectId clientId, ObjectId groupId);

    /**
     * Returns a list of all groups already defined by the user corresponding to
     * the current session.
     * 
     * @param clientId the identifier of the client
     * @return a list of all groups already defined by the user corresponding to
     *         the current session.
     */
    GroupList getGroups(ObjectId clientId);

    /**
     * This methods removes all users contained in the given list from a group
     * corresponding to the given group identifier.
     * 
     * @param clientId the identifier of the client
     * @param groupId the identifier of the group to change
     * @param persons a list of people to remove from the specified group
     * @return the {@link Group} object containing information about the
     *         modified group
     */
    Group removeMembers(ObjectId clientId, ObjectId groupId, PersonList persons);

}
