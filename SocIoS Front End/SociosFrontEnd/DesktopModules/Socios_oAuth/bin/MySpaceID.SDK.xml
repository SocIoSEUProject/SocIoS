<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySpaceID.SDK</name>
    </assembly>
    <members>
        <member name="T:MySpaceID.SDK.Models.V2.BasicPerson">
            <summary>
            Contains the basic information about a person.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.DateFormat">
            <summary>
            Signifies what time of format dates will be returned in from the API. Refer here for more information: http://developerwiki.myspace.com/index.php?title=Date%2C_Time_and_Timezone_Formats
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Context.SecurityContext.ValidateSignature(System.String,System.String,System.Web.HttpRequest,System.String)">
            <summary>
            This method is meant for servers to validate incoming OAuth requests from MySpace typically made through an OpenSocial makeRequest call, or an iFrame src attribute. If the return value is true, it means that the signature contained in the request matches the actual request that was signed with the correct consumer secret for that consumer key.
            </summary>
            <param name="apiServerUri">Your server which is being requested by MySpace(e.g. http://localhost:9090/ or http://myserver.com/).</param>
            <param name="resourcePath">The relative path of the resource being requested.</param>
            <param name="httpRequest">The request</param>
            <param name="accessTokenSecret">The access token of the particular request. This will be empty for onsite apps and iFrame src attributes.</param>
            <returns>True if the signature in the request matches correctly.</returns>
        </member>
        <member name="P:MySpaceID.SDK.Context.SecurityContext.ConsumerKey">
            <summary>
            Your ConsumerKey that you registered at http://developer.myspace.com
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Context.SecurityContext.ConsumerSecret">
            <summary>
            The ConsumerSecret generated for your ConsumerKey. You can find your ConsumerSecret at http://developer.myspace.com
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Context.SecurityContext.OAuthTokenKey">
            <summary>
            The value of the Authorized OAuth Access Token granted to you from api.myspace.com
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Context.SecurityContext.OAuthTokenSecret">
            <summary>
            The secret to the Authorized OAuth Access Token granted to you from api.myspace.com
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Context.SecurityContext.OAuthVerifier">
            <summary>
            The secret to the Authorized OAuth Access Token granted to you from api.myspace.com
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Context.OffsiteContext.GetRequestToken(System.String)">
            <summary>
            <para>Returns the request OAuth authentication token associated with the current user. </para>
            <para>Resource: /v1/request_token</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_request_token</para>
            </summary>
            <returns>Unauthorized Request Token</returns>
        </member>
        <member name="M:MySpaceID.SDK.Context.OffsiteContext.GetAccessToken(MySpaceID.SDK.OAuth.Tokens.OAuthToken)">
            <summary>
            <para>Exchanges a User-Authorized Request Token for an Access Token.</para>
            </summary>
            <param name="requestToken">User-Authorized Request Token</param>
            <returns>Access Token</returns>
        </member>
        <member name="M:MySpaceID.SDK.Context.OffsiteContext.GetAccessToken(System.String,System.String,System.String)">
            <summary>
            <para>Exchanges a User-Authorized Request Token for an Access Token.</para>
            </summary>
            <param name="oAuthTokenKey">User-Authorized Request Token Key</param>
            <param name="oAuthTokenSecret">User-Authorized Request Token Secret</param>
            <returns>Access Token</returns>
        </member>
        <member name="M:MySpaceID.SDK.Context.OffsiteContext.GetAuthorizationUrl(MySpaceID.SDK.OAuth.Tokens.OAuthToken,System.String)">
            <summary>
            <para>Constructs the User Authorization URL that a user can be forwarded to in order to authorize the Unauthorized Request Token.</para>
            </summary>
            <param name="requestToken">The Request Token associated with your OAuth</param>
            <param name="callBackUrl">The callback URL that the browser should be redirected to once the User inputs credentials at the User Authorization URL</param>
            <returns>User Authorization URL</returns>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.FullProfile">
            <summary>
            <para>Contains the full information of a MySpace user.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=full</para>
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.AboutMe">
            <summary>
            What the user has entered in the "aboutme" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Age">
            <summary>
            The user's current age.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.City">
            <summary>
            The user's current city.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Country">
            <summary>
            The user's current country.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Culture">
            <summary>
            The user's current culture.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Gender">
            <summary>
            The user's gender.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Hometown">
            <summary>
            The user's hometown.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.MaritalStatus">
            <summary>
            The user's current marital status.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Postalcode">
            <summary>
            The user's current postal code.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Region">
            <summary>
            The user's current region (e.g. California).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.Type">
            <summary>
            The type of the user (e.g. RegularUser).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FullProfile.BasicProfile">
            <summary>
            The user's basic profile.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserAlbums">
            <summary>
            <para>Contains user's albums.</para>
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserAlbums.Albums">
            <summary>
            Array of user's actual albums.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.Album">
            <summary>
            Contains information about a specific user album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.AlbumUri">
            <summary>
            The URI of the album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.DefaultImage">
            <summary>
            The URI of the default image for this album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.Id">
            <summary>
            The unique Id of this album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.Location">
            <summary>
            The user-assigned location name associated with the album
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.PhotoCount">
            <summary>
            The number of photos with the album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.PhotosUri">
            <summary>
            The URI of the photo location
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.Privacy">
            <summary>
            The user-selected privacy setting for the album
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.Title">
            <summary>
            The user-assigned title of the album
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Album.User">
            <summary>
            The basic profile of the user.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.V2Endpoints">
            <summary>
            Class that defines the REST API V2 Endpoints.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.ProfileDetailType">
            <summary>
            The different types of profile details that can be requested with a profile.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.FriendProfile">
            <summary>
            <para>Inherits BasicProfile.  The class is used to handle requests for a user's friends that contain optional parameters to receive additional information regarding a user's friends.</para>
            <para>Some properties may be null depending on the optional parameters used in the request.</para>
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.BasicProfile">
            <summary>
            <para>Contains the basic information about a MySpace user.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=basic</para>
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.HasAppInstalled">
            <summary>
            Indicates whether the present user has installed the current application.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.Image">
            <summary>
            The URI to the user's regular image.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.LargeImage">
            <summary>
            The URI to the user's large image.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.Name">
            <summary>
            The vanityname of the user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.Uri">
            <summary>
            The URI to this user's resource within the MySpace REST API.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.UserId">
            <summary>
            The userId that corresponds to this user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.UserType">
            <summary>
            The type of user (e.g. RegularType).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.WebUri">
            <summary>
            The user's Vanity URL (e.g. www.myspace.com/Tom)
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.BasicProfile.LastUpdatedDate">
            <summary>
            The date when the user last updated his MySpace profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FriendProfile.MoodId">
            <summary>
            The moodId of the friend's current mood. Could be -1 if 'mood' was not requested in optional parameters (e.g. show=mood).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FriendProfile.MoodImageUrl">
            <summary>
            The URI to the image of the friend's current mood.  Could be empty if 'mood' was not requested in the optional parameters (e.g. show=mood).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FriendProfile.MoodLastUpdated">
            <summary>
            The timestamp of the last time the friend updated his/her mood. Could be empty if 'mood' was not requested in the optional parameters (e.g. show=mood).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FriendProfile.OnlineNow">
            <summary>
            Indicates whether this friend is currently logged into MySpace. Could be empty if 'online' was not requested in the optional parameters (e.g. show=online).
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.FriendProfile.Status">
            <summary>
            Current status of the friend. Could be empty if 'status' was not requested in the optional parameters (e.g. show=status).
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.MySpaceExceptionType">
            <summary>
            Exception types that may be thrown within the MySpaceID SDK.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.MySpaceExceptionType.TOKEN_REQUIRED">
            <summary>
            Calling a MySpace API without having a valid request/access token
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.MySpaceExceptionType.REMOTE_ERROR">
            <summary>
            MySpace servers sent an error. For example, bad JSON
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.MySpaceExceptionType.REQUEST_FAILED">
            <summary>
            Unable to complete an HTTP request. For example, empty JSON response
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.MySpaceExceptionType.CONNECT_FAILED">
            <summary>
            Unable to connect to MySpace API servers
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.RealTimeStreamEndpoints">
            <summary>
            Class that defines the REST API ACTIVITY STREAM Endpoints.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RealTimeStreamEndpoints.GET_REALTIMESTREAM">
            <summary>
            get real time stream (O = Id of stream)
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RealTimeStreamEndpoints.POST_REALTIMESTREAM">
            <summary>
            Post a new Real time stream
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RealTimeStreamEndpoints.DELETEALL_REALTIMESTREAM">
            <summary>
            Delete all streams 
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.ActivityStreamEndpoints">
            <summary>
            Class that defines the REST API ACTIVITY STREAM Endpoints.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.ActivityStreamEndpoints.USER_ACTIVITYSTREAM">
            <summary>
            GET THE USER ACTIVITY STREAM (0 =  USERID)
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.ActivityStreamEndpoints.FRIENDS_ACTIVITYSTREAM">
            <summary>
            GET THE USER FRIENDS ACTIVITY STREAM (0 = USERID)
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.BaseApi.getQueryParamFromDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Returns the Query string of dictionary Object passed
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.PersonWrapper">
            <summary>
            This is the wrapper class that contains Person object.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.FriendsProfile">
            <summary>
            Contains a list of the user's Profile.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.MediaItem">
            <summary>
            Contains information about a specific user MediaItem.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.MediaItem.id">
            <summary>
            The unique id of this MediaItem.
            </summary>            
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.MediaItem.thumbnailUrl">
            <summary>
            The title of this MediaItem.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.MediaItem.title">
            <summary>
            The title of this MediaItem.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.MediaItem.type">
            <summary>
            The type of this MediaItem.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.MediaItem.url">
            <summary>
            The type of this Url.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.MediaItemWrapper">
            <summary>
            This class is the wrapper class that holds MediaItem object.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserMediaItems">
            <summary>
            Contains a list of the user's MediaItem.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.Photo">
            <summary>
            Contains information about a specific user photo.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.Caption">
            <summary>
            The photo's caption.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.Id">
            <summary>
            The unique id of this photo.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.ImageUri">
            <summary>
            The URI of the regular image of this photo.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.LastUpdatedDate">
            <summary>
            The timestamp of when this photo was last updated.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.PhotoUri">
            <summary>
            The URI of this photo within the REST API.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.SmallImageUri">
            <summary>
            The URI of the small image of this photo.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.UploadDate">
            <summary>
            The timestamp of when this photo was first uploaded.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Photo.User">
            <summary>
            The basic information about this user.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserPhotos">
            <summary>
            Contains a list of the user's photos.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.Location">
            <summary>
            Contains information about the location of a Person.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.ApplicationType">
            <summary>
            Specifies what type of Application being used to make calls into the MySpace Developer Platform.  OnSite applications do not need an Access Token because access is implicitly implied
            when the user installs the onsite application. MySpace applications do not have implicit user-access; hence any calls made with this ApplicationType must have valid AccessTokens.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.ApplicationType.OnSite">
            <summary>
            OnSite applications do not need an Access Token because access is implicitly implied
            when the user installs the onsite application.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.ApplicationType.MySpaceID">
            <summary>
            MySpaceID applications do not have implicit user-access; hence any calls made with this ApplicationType must have valid AccessTokens.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.Email">
            <summary>
            Contains the email information of a Person
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Email.Value">
            <summary>
            Actual email
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Email.Primary">
            <summary>
            Indicates if this is a primary email address.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.Indicators">
            <summary>
            Contains indicators information. All values that have no indicators will be null.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.User">
            <summary>
            The Basic Profile of the user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.CountNewMail">
            <summary>
            The new mail count
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.MailUrl">
            <summary>
            The url for new mail.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.BirthdayUrl">
            <summary>
            The url for birthday
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.BlogCommentUrl">
            <summary>
            The url to blog comments
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.BlogSubscriptionPostUrl">
            <summary>
            The url to blog subscription posts
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.CommentUrl">
            <summary>
            The url to comments.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.EventInvitationUrl">
            <summary>
            The url to event invitations.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.FriendsRequestUrl">
            <summary>
            The url to friend requests.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.GroupNotificationUrl">
            <summary>
            The url to group notifications.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.PhotoTagApprovalUrl">
            <summary>
            The url to the photo tag approvals.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.PictureCommentUrl">
            <summary>
            The url to picture comments.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.RecentlyAddedFriendUrl">
            <summary>
            The url to recently added friends.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.VideoCommentUrl">
            <summary>
            The url to video comments.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Indicators.VideoProcessUrl">
            <summary>
            The url to video process.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.ExtendedProfile">
            <summary>
            <para>Contains the extended information of a MySpace user.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=extended</para>
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Books">
            <summary>
            What the user has entered in the "books" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.DesireToMeet">
            <summary>
            What the user has entered in the "desire to meet" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Headline">
            <summary>
            What the user has entered as the headline of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Heroes">
            <summary>
            What the user has entered in the "heroes" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Interests">
            <summary>
            What the user has entered in the "interests" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Mood">
            <summary>
            The user's current mood.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Movies">
            <summary>
            What the user has entered in the "movies" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Music">
            <summary>
            What the user has entered in the "music" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Occupation">
            <summary>
            What the user has entered in the "occupation" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Status">
            <summary>
            The user's current status.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Television">
            <summary>
            What the user has entered in the "television" section of his/her profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.Type">
            <summary>
            The type of user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.ZodiacSign">
            <summary>
            The user's zodiac sign.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.ExtendedProfile.FullProfile">
            <summary>
            <para>The user's full profile.</para>
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Api.RestV1">
            <summary>
            <para>RestV1 is the class that encapsulates all the work you will need to make server-to-server calls to the MySpace V1 REST Resources.</para>
            <para>Please refer to http://wiki.developer.myspace.com/MySpaceSDK for full details on the MySpace SDK</para>
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetCurrentUser">
            <summary>
            <para>Retrieves the basic information for OAuth token user.</para>
            <para>Resource: /v1/user</para>
            <para>Information that is returned: User ID, User URI, Web URI, Image URI, Large image URI, User type (e.g., RegularUser), Hashed data </para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_user</para>
            </summary>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetUser(System.Int32)">
            <summary>
            <para>Retrieves the basic profile information about the user.</para>
            <para>Resource: /v1/users/{userid}</para>
            <para>Basic profile data includes: UserId, User URI, Display name, Web URI, Image URI, Large Image URI, User Type, Last Update Date </para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_user</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetMood(System.Int32)">
            <summary>
            <para>Returns mood information for the user specified by userId.</para>
            <para>Resource: /v1/users/{userId}/mood</para>
            <para>Returned mood data for the user includes: The userId and URI, mood, mood image URL (web path and file name for iBrad-emoticon)</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_mood</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetMoodsList(System.Int32)">
            <summary>
            <para>Gets a list of Moods that a given user can have.</para>
            <para>Resource: /v1/users/{userId}/moods</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.SetMoodStatus(System.Int32,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            <para>Sets the status and mood for the user specified by userId. If null is passed to any of the parameters(other than userId) then the value will not change at MySpace.</para>
            <para>Resource: PUT on /v1/users/{userId}/status</para>
            <para>Request Body parameters may include: 'moodId', 'moodName', 'moodPictureName' and 'status'</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=PUT_v1_users_userId_mood</para>
            <para>See details on mood values here: http://wiki.developer.myspace.com/index.php?title=Myspace_mood_data_names_codes_images</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="moodId">Id corresponding to the mood to change to. See http://wiki.developer.myspace.com/index.php?title=Myspace_mood_data_names_codes_images for mood values. Input null if you do not want to set the moodId</param>
            <param name="moodName">Sets the text of the custom mood. Leave null if you do not want a cusom mood. Note that the empty string corresponds to a valid custom mood.</param>
            <param name="moodPictureName">Sets the picture name of for the user's mood. See http://wiki.developer.myspace.com/index.php?title=Myspace_mood_data_names_codes_images for mood picture names. Leave null if you do not want to set the mood picture.</param>
            <param name="status">Sets the status of the user. Leave null if you do not want to change the status. Note that the empty string corresponds to a valid status.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.Api.RestV1.GetAlbums(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.Api.RestV1.GetAlbums(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})" -->
        <member name="M:MySpaceID.SDK.Api.RestV1.GetAlbum(System.Int32,System.Int32)">
            <summary>
            <para>Returns album of the user specified by userId parameter and albumId</para>
            <para>Resource: /v1/users/{userId}/albums/{albumId}</para>
            <para>Returned album data includes the following data: The unique ID of the album, The URI of the album, a valid HTTP address
            , The user-assigned title of the album, The user-assigned location name associated with the album, The user-assigned default image associated with the album,
            The user-selected privacy setting for the album, The number of photos in the album, The URI of the photo location</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_albums</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="albumId">AlbumId corresponding to the desired album. Use GetAlbums() to get albumId</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriends(System.Int32)">
            <summary>
            <para>Retrieves a list of friends of the user identified by the parameter userId.</para>
            <para>Resource: /v1/users/{userId}/friends</para>
            <para>Returned data is a list of users with basic information.</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_list_page_show</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriends(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            <para>Retrieves a list of friends of the user identified by the parameter userId.</para>
            <para>Resource: /v1/users/{userId}/friends</para>
            <para>Returned data is a list of users with basic information.</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_list_page_show</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="page">The page number of the paged list.</param>
            <param name="pageSize">The page size of the paged list.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriends(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},MySpaceID.SDK.Config.FriendList,MySpaceID.SDK.Config.FriendShow)">
            <summary>
            <para>Retrieves a list of friends of the user identified by the parameter userId.</para>
            <para>Resource: /v1/users/{userId}/friends</para>
            <para>Returned data is a list of users with basic information.</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_list_page_show</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="page">The page number of the paged list.</param>
            <param name="pageSize">The page size of the paged list.</param>
            <param name="list">Applies a filter to the GetFriends search.</param>
            <param name="show">Requests additional friend information in the GetFriends search.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriendStatus(System.Int32)">
            <summary>
            <para>Returns status and mood for friends of user specified by userId. Retrieves in order of descending lastupdated time (most recently updated are listed first).</para>
            <para>Resource: 1/users/{userId}/status</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_status</para>
            </summary>
            <param name="userId"></param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriendship(System.Int32,System.Int32[])">
            <summary>
            <para>Indicates whether the person(s) specified by {friendsId} are friends of the user specified by {userId}.</para>
            <para>Resource: /v1/users/{userId}/friends/{friendsId}</para>
            <para>Returned friendship/friend data includes: True/False flag in the "Are Friends" field.</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_friendsId</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="friendIds">The list of friendIds to be checked against the userId for Friendship</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetPhotos(System.Int32)">
            <summary>
            <para>Returns all of the specified user's photos</para>
            <para>Resource: /v1/users/{userId}/photos</para>
            <para>Returned photo data includes:</para>
            <para>The ID and URI associated with the userId</para>
            <para>The number (count) of photos, and for each photo, the following data:</para>
            photoId,photo URI,image URI,small image URI,caption (if any),last update date and time (if any),upload date and time 
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_photos</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetPhotos(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            <para>Returns all of the specified user's photos</para>
            <para>Resource: /v1/users/{userId}/photos</para>
            <para>Returned photo data includes:</para>
            <para>The ID and URI associated with the userId</para>
            <para>The number (count) of photos, and for each photo, the following data:</para>
            photoId,photo URI,image URI,small image URI,caption (if any),last update date and time (if any),upload date and time 
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_photos</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="page">The page number of the paged list.</param>
            <param name="pageSize">The page size of the paged list.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetPhoto(System.Int32,System.Int32)">
            <summary>
            <para>Returns the photo specified by photoId from the album specified by albumId and belonging to the user specified by userId.</para>
            <para>Resource: /v1/users/{userId}/photos</para>
            <para>Returned photo data includes:</para>
            <para>The ID and URI associated with the userId</para>
            <para>The number (count) of photos, and for each photo, the following data:</para>
            photoId,photo URI,image URI,small image URI,caption (if any),last update date and time (if any),upload date and time 
            
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_photos_photoId</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="photoId">The id of the photo that is requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFullProfile(System.Int32)">
            <summary>
            <para>Retrieves the full profile information about the user. Also contains BasicProfile.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=full</para>
            <para>Basic profile data includes: UserId, User URI, Display name, Web URI, Image URI, Large Image URI, User Type, Last Update Date </para>
            <para>Full profile data includes Basic data details plus:  Profile URI, City, Region, Postal code, Country, Hometown, Age, Gender, Culture, About Me, Marital Status </para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_profile_basic_full_extended</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetBasicProfile(System.Int32)">
            <summary>
            <para>Retrieves the basic profile information about the user.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=basic</para>
            <para>Basic profile data includes: UserId, User URI, Display name, Web URI, Image URI, Large Image URI, User Type, Last Update Date </para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_profile_basic_full_extended</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetExtendedProfile(System.Int32)">
            <summary>
            <para>Retrieves the extended profile information about the user. Also contains FullProfile and BasicProfile.</para>
            <para>Resource: /v1/users/{userid}/profile?detailtype=extended</para>
            <para>Basic profile data includes: UserId, User URI, Display name, Web URI, Image URI, Large Image URI, User Type, Last Update Date </para>
            <para>Full profile data includes Basic data details plus:  Profile URI, City, Region, Postal code, Country, Hometown, Age, Gender, Culture, About Me, Marital Status </para>
            <para>Extended profile data includes Full data details plus:  Books, DesireToMeet, Headline, Heroes, Interests, Mood, Movies, Music, Occupation, Status, Television,
            Type, and Zodiac Sign.</para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_profile_basic_full_extended</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetStatus(System.Int32)">
            <summary>
            <para>Returns status information for the user specified by userid.</para>
            <para>Resource: /v1/users/{userId}/status</para>
            <para>Returned data includes: userId, uri, status, mood, moodimageurl, moodlastupdated </para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_status</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetVideos(System.Int32)">
            <summary>
            <para>Returns video data for the videos of the user specified by userId.</para>
            <para>Resource: /v1/users/{userId}/videos</para>
            <para>Returned video data includes the number (count) of videos associated with the userId, and for each video, the following data:
            Video ID, Video URI, Privacy (setting), Title, Date created, Last Update, Media Type, Thumbnail URI, Description, Media Status, Runtime
            Total Views, Total Comments, Total Rating, Total votes, Country, Language </para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_videos</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetVideos(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            <para>Returns video data for the videos of the user specified by userId.</para>
            <para>Resource: /v1/users/{userId}/videos</para>
            <para>Returned video data includes the number (count) of videos associated with the userId, and for each video, the following data:
            Video ID, Video URI, Privacy (setting), Title, Date created, Last Update, Media Type, Thumbnail URI, Description, Media Status, Runtime
            Total Views, Total Comments, Total Rating, Total votes, Country, Language </para>
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_videos</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="page">The page number of the paged list.</param>
            <param name="pageSize">The page size of the paged list.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetVideo(System.Int32,System.Int32)">
            <summary>
            <para>Returns video data for the video specified by videoId, for the user specified by userId. </para>
            <para>Resource: /v1/users/{userId}/videos/{videoId}</para>
            <para>Returned video data includes for the specified videoId, the following data: Video ID, Video URI, Privacy (setting), Title
            Date created, Last Update, Media Type, Thumbnail URI, Description (public facing), Media Status, Runtime (presentation length in minutes),
            Total Views, Total Comments, Total Rating, Total votes, Country, Language </para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_videos_videoId</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="videoId">VideoId of the video desired.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetActivities(System.Int32)">
            <summary>
            <para>Returns a user's MySpace activity stream. Currently the return format is only available in ATOM.</para>
            <para>Resource: /v1/users/{userId}/activities</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriendActivities(System.Int32)">
            <summary>
            <para>Returns a user's friends' activity stream. Currently the return format is only available in ATOM.</para>
            <para>Resource: /v1/users/{userId}/friends/activities</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetStatusHistoryActivities(System.Int32)">
            <summary>
            <para>Returns a user's status and mood history. Format is in ATOM.</para>
            <para>Resource: /v1/users/{userId}/activities?activityTypes=StatusMoodUpdate</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetGlobalAppData">
            <summary>
            <para>Returns global application data for a particular application.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_appdata_global</para>
            </summary>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetGlobalAppData(System.Collections.Generic.List{System.String})">
            <summary>
            <para>Returns global application data for a particular application.</para>
            <para>Resource: /v1/appdata/global/{keys}</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_appdata_global_keys</para>
            </summary>
            <param name="keys">Keys of AppData that is desired.</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.AddGlobalAppData(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Creates global application data key/value pairs.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=PUT_v1_appdata_global</para>
            </summary>
            <param name="globalAppDataPairs">Key/value pairs that are to be added.</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.DeleteGlobalAppData(System.Collections.Generic.List{System.String})">
            <summary>
            <para>Removes global appdata for specified list of keys.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=DELETE_v1_appdata_global_keys</para>
            </summary>
            <param name="keys">List of keys that are to be deleted.</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.AddUserAppData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Add new item to User's Appdata.</para>
            <para>Resource: /v1/users/{userId}/appdata</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=PUT_v1_users_userId_appdata</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="userAppDataPairs">Key/value pairs that are to be added.</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.DeleteUserAppData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            <para>Removes User appdata for specified list of keys.</para>
            <para>Resource: /v1/users/{userId}/appdata</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="keys">List of keys that are to be deleted.</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetUserAppData(System.Int32)">
            <summary>
            <para>Returns user application data for a particular application.</para>
            <para>Resource: /v1/users/{userId}/appdata</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_appdata_keys</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetUserAppData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            <para>Returns user application data for a particular application.</para>
            <para>Resource: /v1/users/{userId}/appdata/{keys}</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_appdata_keys</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="keys">Keys of AppData that is desired.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriendAppData(System.Int32)">
            <summary>
            <para>Returns application key/value data for applications assigned to the user's friends.</para>
            <para>Resource: /v1/users/{userId}/friends/appdata</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_appdata</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetFriendAppData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            <para>Returns application key/value data for applications assigned to the user's friends.</para>
            <para>Resource: /v1/users/{userId}/friends/appdata/{keys}</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_appdata_keys</para> 
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="keys">Keys of AppData that is desired.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RestV1.GetIndicators(System.Int32)">
            <summary>
            <para>Returns the indicator URL for those indicators that are true; suppresses tags for indicators that are false.</para>
            <para>Resource: /v1/users/{userId}/indicators</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_indicators</para> 
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserFriends">
            <summary>
            Contains a list of a user's friends.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserFriends.Count">
            <summary>
            The count of a friends.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserFriends.Friends">
            <summary>
            Array filled with basic profiles of friends.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.Organization">
            <summary>
            Contains information about a particular organization of a Person.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Organization.Address">
            <summary>
            The address of the organization.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Organization.Name">
            <summary>
            The name of the organization
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Organization.Title">
            <summary>
            The title of the organization.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V2.Organization.Type">
            <summary>
            The type of organization (e.g. job).
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEMS_ALBUMS_OPENSOCIAL">
            <summary>
            get photos from all albums
            ( 0 = Person Id  )
            ( 1 = AlbumId  )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEM_ALBUMS_OPENSOCIAL">
            <summary>
            get perticular photo 
            ( 0 = Person Id )
            ( 1 = AlbumId  )
            ( 2 = Media Item Id )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEMS_VIDEOS_OPENSOCIAL">
            <summary>
            get all videos 
            ( 0 = Person Id )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.ADDMEDIAITEMS_VIDEOS_OPENSOCIAL">
            <summary>
            get all videos 
            ( 0 = Person Id )
            ( 1 = QS Parameter )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEM_VIDEOS_OPENSOCIAL">
            <summary>
            get perticular video 
            ( 0 = Person Id )
            ( 1 = Media Item Id )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEMSUPPORTEDCATEGORIES_VIDEOS_OPENSOCIAL">
            <summary>
            get video supported categories
            ( 0 = Person Id )
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEMSUPPORTEDCATEGORY_VIDEOS_OPENSOCIAL">
            <summary>
            ( 0 = Person Id )
            ( 1 = Category Id )
            Get Video Category
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.RoaEndpoints.MEDIAITEMSFIELDS_OPENSOCIAL">
            <summary>
            Supported Fields for media Items
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Api.RealTimeStream">
            <summary>
            <para>RealTimeStream is the class that encapsulates all the work you will need to make server-to-server calls to MySpace Real Time Stream Resources.</para>
            <para>Please refer to http://wiki.developer.myspace.com/index.php?title=Category:Real_Time_Stream for full details on Portable Contacts</para>
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.RealTimeStream.AddRealtimeStream(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <para>Add server to recive realtime stream</para>
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="rate">Transfer Rate</param>
            <param name="type">real Stream type</param>
            <param name="endpoint">location where strem is to be updated</param>
            <param name="query">query</param>
            <param name="metaData">metadata</param>
            <param name="batchSize">batchsize</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RealTimeStream.GetRealtimeStream(System.String)">
            <summary>
            get the details of stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="RequestId">Id of stream</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RealTimeStream.UpdateRealtimeStream(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update details of Stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="rate">Transfer Rate</param>
            <param name="type">real Stream type</param>
            <param name="endpoint">location where strem is to be updated</param>
            <param name="query">query</param>
            <param name="metaData">metadata</param>
            <param name="batchSize">batchsize</param>
            <param name="RequestId">Request Id which needs to be updated</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RealTimeStream.DeleteRealtimeStream(System.String)">
            <summary>
            Delete the specific stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="RequestId">Id of stream</param>
            <returns>Empty string</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RealTimeStream.DeleteAllRealtimeStream">
            <summary>
            Delete All streams
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.AppData">
            <summary>
            Application Data for a particular application.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.AppData.KeyValueCollection">
            <summary>
            The Collection of application data pairs.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.AppDataPair">
            <summary>
            A key-value pair representing Application Data.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.AppDataPair.Key">
            <summary>
            The key of the AppData pair.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.AppDataPair.Value">
            <summary>
            The value of the AppData pair.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserAppData">
            <summary>
            User Application Data class.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserAppData.UserId">
            <summary>
            The userId corresponding to this application data.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.Activity">
            <summary>
            Contains information about a specific user Activity.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Activity.id">
            <summary>
            The unique id of this Activity.
            </summary>            
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Activity.title">
            <summary>
            The title of this Activity.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.ActivityWrapper">
            <summary>
            This class is the wrapper class that holds Activity object.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserActivities">
            <summary>
            Contains a list of the user's Activity.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserActivity">
            <summary>
            Contains a user activity.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.FriendShow">
            <summary>
            Defines what additional details are desired from friends info.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendShow.Mood">
            <summary>
            The resources will indicate the mood of the friend.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendShow.Status">
            <summary>
            The resources will indicate the status of the friend.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendShow.Online">
            <summary>
            The resources will indicate the online status of the friend.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendShow.None">
            <summary>
            No addtional details will be requested.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.BodyType">
            <summary>
            Contains the body type of a Person.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.FriendList">
            <summary>
            Defines which type of friends list is desired.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendList.All">
            <summary>
            All types of friends.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendList.Top">
            <summary>
            Top friends will be returned.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendList.Online">
            <summary>
            Online friends list will be returned.
            </summary>
        </member>
        <member name="F:MySpaceID.SDK.Config.FriendList.App">
            <summary>
            The friends who have installed user’s application will be returned.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserFriendship">
            <summary>
            Indicates whether the person(s) specified in the Frienship array are friends of the user specified in the User property..
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.Friendship">
            <summary>
            Represents a friendship between to users.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Friendship.AreFriends">
            <summary>
            Indicates whether the friendship exists or not.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Friendship.FriendId">
            <summary>
            The userId of the user which friendship is being tested.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.Friends">
            <summary>
            Contains information about a person's friends.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.FriendsStatusMoodInfo">
            <summary>
            Contains details of Friends Status Mood
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.FriendsStatusMood">
            <summary>
            Contains information regarding Friends Status Mood
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.Album">
            <summary>
            Contains information about a specific user Album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Album.caption">
            <summary>
            The Album's caption.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Album.id">
            <summary>
            The unique id of this Album.
            </summary>            
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Album.thumbnailUrl">
            <summary>
            The thumbnail URL of this Album.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Album.title">
            <summary>
            The title of this Album.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.AlbumWrapper">
            <summary>
            This class is the wrapper class that holds Album object.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserAlbums">
            <summary>
            Contains a list of the user's Albums.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserAlbum">
            <summary>
            Contains a user Album.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchVideoWrapper">
            <summary>
            This class is the wrapper class used to hold video search data.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.Category">
            <summary>
            Contains a category.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.Tag">
            <summary>
            Contains a tag.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchResultVideos">
            <summary>
            Contains a videos search result.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.OpenSearchEndpoints">
            <summary>
            Class that defines the OPEN SEARCH Endpoints.
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.#ctor(MySpaceID.SDK.Context.SecurityContext)">
            <summary>
            <para>RoaApi is the class that encapsulates server-to-server calls to the MySpace ROA OpenSocial Version 0.9 Resources.</para>
            <para>Please refer to http://wiki.developer.myspace.com/index.php?title=Category:OpenSocial_Version_0.9 for full details on the MySpace SDK</para>
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddPhoto(System.String,System.String,System.String,System.Byte[])">
            <summary>
            <para>Adds a photo to an album.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems#Add_a_Photo_to_an_Album</para>
            </summary>
            <param name="personId">Id of the requestor</param>
            <param name="albumId">Id of the album that photo will go into.</param>
            <param name="caption">Caption for the photo.</param>
            <param name="photoData">A .jpg photo</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddPhoto(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Adds a photo to an album.</para>
            <para>Resource: http://opensocial.myspace.com/roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems#Add_a_Photo_to_an_Album</para>
            </summary>
            <param name="personId">Id of the requestor</param>
            <param name="albumId">Id of the album that photo will go into.</param>
            <param name="caption">Caption for the photo.</param>
            <param name="filePath">File path to a .jpg photo. Please ensure your app has proper permission to reach this file.</param>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddVideo(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            <para>Adds a Video.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            </summary>
            <param name="personId">User Id whose video is to be added</param>
            <param name="description">Description of video</param>
            <param name="tags">Tags to be given to video</param>
            <param name="categoryId">Video category Id (get from list of mscategories from function "GetVideosCategories")</param>
            <param name="language">Video Language</param>
            <param name="caption">Video caption</param>
            <param name="filePath">Path of Video</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddVideo(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Byte[])">
            <summary>
            <para>Adds a Video.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            </summary>
            <param name="personId">User Id whose video is to be added</param>
            <param name="description">Description of video</param>
            <param name="tags">Tags to be given to video</param>
            <param name="categoryId">Video category Id (get from list of mscategories from function "GetVideosCategories")</param>
            <param name="language">Video Language</param>
            <param name="caption">Video caption</param>
            <param name="videoData">Video data in bytes</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddAlbum(System.String,System.String)">
            <summary>
            Add a new album for current user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>resourse: http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryparams}</para>
            </summary>
            <param name="personId">current user Id </param>
            <param name="caption">Caption of the Album</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.UpdatePhoto(System.String,System.String,System.String,System.String)">
            <summary>
            Not functional
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId"></param>
            <param name="mediaItemId"></param>
            <param name="caption"></param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideosCategories(System.String)">
            <summary>
            Get video Categories 
            </summary>
            <param name="personId">current user id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideosCategories(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get video Categories 
            </summary>
            <param name="personId">current user id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideosCategory(System.String,System.String)">
            <summary>
            Get video Category by Id
            </summary>
            <param name="personId">current user id</param>
            <param name="categoryId">Category id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideosCategory(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get video Category by Id
            </summary>
            <param name="personId">current user id</param>
            <param name="categoryId">Category id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPhotos(System.String,System.String)">
            <summary>
            <para>Get photos from perticular album</para>
            <para>Deials: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Id of albums whose photos are to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPhotos(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get photos from perticular album</para>
            <para>Deials: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Id of albums whose photos are to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPhoto(System.String,System.String,System.String)">
            <summary>
            <para>get a perticular photo</para>
            <para>Deails: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">id of album in which photo belongs</param>
            <param name="mediaItemId">id of photo</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPhoto(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get a perticular photo</para>
            <para>Deails: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">id of album in which photo belongs</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <param name="mediaItemId">id of photo</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideos(System.String)">
            <summary>
            <para>get All videos of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos</para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideos(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get All videos of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideo(System.String,System.Int32)">
            <summary>
            <para>get perticular video of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos/{videoid}  </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="videoId">id of the video</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetVideo(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get perticular video of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos/{videoid}  </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="videoId">id of the video</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMediaItemFields">
            <summary>
            <para>get media items fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMediaItemFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get media items fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/@supportedFields </para>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddMyAppData(System.String,System.Int32,System.String,System.String)">
            <summary>
            <para>Add fields to application</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData </para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/appData/@me/@self/{appid}?{queryparams}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be Added</param>
            <param name="field">Field to be added </param>
            <param name="value">Vlaue of the Added field</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.UpdateMyAppData(System.String,System.Int32,System.String,System.String)">
            <summary>
            <para>Update fields in Application</para>
            <para>Details: </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{Appid}?{queryparams} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be Updated</param>
            <param name="FieldToupdate">Field name that is to be updated</param>
            <param name="value">Updated value of field</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyAppData(System.String,System.Int32)">
            <summary>
            <para>get perticular application data </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{AppId}?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyAppData(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get perticular application data </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{AppId}?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.DeleteMyAppData(System.String,System.Int32,System.String)">
            <summary>
            <para>Delete Application data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{App_id}?{1} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be deleted</param>
            <param name="FieldToDelete">Field name to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddNotification(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Add notification Item</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Notifications</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/notifications/{userid}/@self</para>
            </summary>
            <param name="personId">Person posting notification</param>
            <param name="mediaItemUrl">V9 Media Item URL if to be added with notification</param>
            <param name="recipientIds">Comma seperated Ids of recipients</param>
            <param name="templateParams">Template parameters</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbums(System.String)">
            <summary>
            Get All albums of user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryParams} </para>
            </summary>
            <param name="personId">current user id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbums(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get All albums of user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryParams} </para>
            </summary>
            <param name="personId">current user id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.UpdateAlbum(System.String,System.String,System.String)">
            <summary>
            <para>Update the Album caption</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">current user id</param>
            <param name="albumId">Album id that needs to be updated</param>
            <param name="caption">New Caption </param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbumFields">
            <summary>
            <para>get album fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbumFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get album fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbum(System.String,System.String)">
            <summary>
            <para>get a perticular album</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Current user id</param>
            <param name="albumId">Album id that needs to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAlbum(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get a perticular album</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Current user id</param>
            <param name="albumId">Album id that needs to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddActivity(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">current Person Id</param>
            <param name="externalId">external Id</param>
            <param name="title">title of the activity</param>
            <param name="body">body of the activity</param>
            <param name="templateParams">Dictionary parameter</param>
            <param name="titleId">titleId of the activity</param>
            <returns>url of newly created activity</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyActivities(System.String)">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyActivities(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendsActivities(System.String)">
            <summary>
            <para>get All friends activities</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@me/@friends?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendsActivities(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get All friends activities</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@me/@friends?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityFields">
            <summary>
            <para>get activiy fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get activiy fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityVerbs">
            <summary>
            <para>get Activity verbs</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityVerbs(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Activity verbs</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityObjectTypes">
            <summary>
            <para>get Activity Type objects</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetActivityObjectTypes(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Activity Type objects</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMediaItemcomments(System.String,System.String,System.String)">
            <summary>
            <para>get Media item comments</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_MediaItemComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaitemcomments/{personId}/@self/{albumId}/{mediaItemId}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Album Id</param>
            <param name="mediaId">Photo Id whose comments are to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMediaItemcomments(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Media item comments</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_MediaItemComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaitemcomments/{personId}/@self/{albumId}/{mediaItemId}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Album Id</param>
            <param name="mediaId">Photo Id whose comments are to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyGroupsData(System.String)">
            <summary>
            <para>get my Groups</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@me?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyGroupsData(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get my Groups</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@me?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetGroupFields">
            <summary>
            <para>get Group fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetGroupFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Group fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPerson(System.String)">
            <summary>
            <para>Get current user profile data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@me/@self?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPerson(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get current user profile data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@me/@self?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriends(System.String)">
            <summary>
            <para>get Current user Friends</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/{userid}/@friends </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriends(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Current user Friends</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/{userid}/@friends </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPeopleFields">
            <summary>
            <para>get Prople fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetPeopleFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Prople fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendStatusMood(System.String,System.String)">
            <summary>
            <para>get Feirnds status moods</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status is to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendStatusMood(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Feirnds status moods</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status is to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendStatusMoodHistory(System.String,System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status history is to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetFriendStatusMoodHistory(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status history is to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyStatusMood(System.String)">
            <summary>
            <para>get My status mood</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyStatusMood(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get My status mood</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyStatusMoodHistory(System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyStatusMoodHistory(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAllFriendsStatusMoodHistory(System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAllFriendsStatusMoodHistory(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get all friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAllFriendsStatusMood(System.String)">
            <summary>
            <para>get all friends status moods </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetAllFriendsStatusMood(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.getUserStatusMoods(System.String)">
            <summary>
            <para>get user status moods</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.getUserStatusMood(System.String,System.Int32)">
            <summary>
            <para>get user status mood</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyMoodComments(System.String,System.String)">
            <summary>
            <para>get comments on my Mood / status</para>
            <para>Details:http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMoodComments </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmoodcomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="statusId">Id of Status</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.UpdateStatusMood(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <para>Update status mooood </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{0}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="lattitude">Lattitude Optional</param>
            <param name="longitude">Longitude Optional</param>
            <param name="moodName">Name of mood to be updated</param>
            <param name="status">Updated Status that needs to be posted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.AddStatusComment(System.String,System.String,System.String)">
            <summary>
            <para>Add comments to status</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMoodComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/statusmoodcomments/{userid}/@self?{queryParams}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="statusId">Id of status on which comment is to be posted</param>
            <param name="comment">comment that needs to be posted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyProfileComments(System.String)">
            <summary>
            <para>Get comments on current user profile</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_ProfileComments</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/profilecomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.RoaApi.GetMyProfileComments(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get comments on current user profile</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_ProfileComments</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/profilecomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="consumerKey"></param>
            <param name="consumerSecret"></param>
            <param name="oAuthToken"></param>
            <param name="oAuthTokenSecret"></param>
            <param name="isOffsite"></param>
            <param name="authorized_verifier"></param>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddPhoto(System.String,System.String,System.String,System.Byte[])">
            <summary>
            <para>Adds a photo to an album.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems#Add_a_Photo_to_an_Album</para>
            </summary>
            <param name="personId">Id of the requestor</param>
            <param name="albumId">Id of the album that photo will go into.</param>
            <param name="caption">Caption for the photo.</param>
            <param name="photoData">A .jpg photo</param>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddPhoto(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Adds a photo to an album.</para>
            <para>Resource: http://opensocial.myspace.com/roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems#Add_a_Photo_to_an_Album</para>
            </summary>
            <param name="personId">Id of the requestor</param>
            <param name="albumId">Id of the album that photo will go into.</param>
            <param name="caption">Caption for the photo.</param>
            <param name="filePath">File path to a .jpg photo. Please ensure your app has proper permission to reach this file.</param>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddVideo(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            <para>Adds a Video.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            </summary>
            <param name="personId">User Id whose video is to be added</param>
            <param name="description">Description of video</param>
            <param name="tags">Tags to be given to video</param>
            <param name="categoryId">Video category Id (get from list of mscategories from function "GetVideosCategories")</param>
            <param name="language">Video Language</param>
            <param name="caption">Video caption</param>
            <param name="filePath">Path of Video</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddVideo(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Byte[])">
            <summary>
            <para>Adds a Video.</para>
            <para>Resource: http://opensocial.myspace.com//roa/09/mediaitems/@me/@self</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            </summary>
            <param name="personId">User Id whose video is to be added</param>
            <param name="description">Description of video</param>
            <param name="tags">Tags to be given to video</param>
            <param name="categoryId">Video category Id (get from list of mscategories from function "GetVideosCategories")</param>
            <param name="language">Video Language</param>
            <param name="caption">Video caption</param>
            <param name="videoData">Video data in bytes</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddAlbum(System.String,System.String)">
            <summary>
            Add a new album for current user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>resourse: http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryparams}</para>
            </summary>
            <param name="personId">current user Id </param>
            <param name="caption">Caption of the Album</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.UpdatePhoto(System.String,System.String,System.String,System.String)">
            <summary>
            Not functional
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId"></param>
            <param name="mediaItemId"></param>
            <param name="caption"></param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideosCategories(System.String)">
            <summary>
            Get video Categories 
            </summary>
            <param name="personId">current user id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideosCategories(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get video Categories 
            </summary>
            <param name="personId">current user id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideosCategory(System.String,System.String)">
            <summary>
            Get video Category by Id
            </summary>
            <param name="personId">current user id</param>
            <param name="categoryId">Category id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideosCategory(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get video Category by Id
            </summary>
            <param name="personId">current user id</param>
            <param name="categoryId">Category id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPhotos(System.String,System.String)">
            <summary>
            <para>Get photos from perticular album</para>
            <para>Deials: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Id of albums whose photos are to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPhotos(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get photos from perticular album</para>
            <para>Deials: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Id of albums whose photos are to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPhoto(System.String,System.String,System.String)">
            <summary>
            <para>get a perticular photo</para>
            <para>Deails: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">id of album in which photo belongs</param>
            <param name="mediaItemId">id of photo</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPhoto(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get a perticular photo</para>
            <para>Deails: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/{albumid}/{mediaid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">id of album in which photo belongs</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <param name="mediaItemId">id of photo</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideos(System.String)">
            <summary>
            <para>get All videos of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos</para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideos(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get All videos of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideo(System.String,System.Int32)">
            <summary>
            <para>get perticular video of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos/{videoid}  </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="videoId">id of the video</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetVideo(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get perticular video of user</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/{userid}/@self/@videos/{videoid}  </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="videoId">id of the video</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMediaItemFields">
            <summary>
            <para>get media items fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMediaItemFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get media items fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/mediaItems/@supportedFields </para>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAllPhotos(System.Int32)">
            <summary>
            <para>Returns all of the specified user's photos</para>
            <para>Resource: /v1/users/{userId}/photos</para>
            <para>Returned photo data includes:</para>
            <para>The ID and URI associated with the userId</para>
            <para>The number (count) of photos, and for each photo, the following data:</para>
            photoId,photo URI,image URI,small image URI,caption (if any),last update date and time (if any),upload date and time 
            <para>See more details at  http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_photos</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddMyAppData(System.String,System.Int32,System.String,System.String)">
            <summary>
            <para>Add fields to application</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData </para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/appData/@me/@self/{appid}?{queryparams}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be Added</param>
            <param name="field">Field to be added </param>
            <param name="value">Vlaue of the Added field</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.UpdateMyAppData(System.String,System.Int32,System.String,System.String)">
            <summary>
            <para>Update fields in Application</para>
            <para>Details: </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{Appid}?{queryparams} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be Updated</param>
            <param name="FieldToupdate">Field name that is to be updated</param>
            <param name="value">Updated value of field</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyAppData(System.String,System.Int32)">
            <summary>
            <para>get perticular application data </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{AppId}?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyAppData(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get perticular application data </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{AppId}?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.DeleteMyAppData(System.String,System.Int32,System.String)">
            <summary>
            <para>Delete Application data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_AppData</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/appData/@me/@self/{App_id}?{1} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="appId">Id Of Application which needs to be deleted</param>
            <param name="fieldToDelete">Field name to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetGlobalAppData">
            <summary>
            <para>Returns global application data for a particular application.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_appdata_global</para>
            </summary>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetGlobalAppData(System.Collections.Generic.List{System.String})">
            <summary>
            <para>Returns global application data for a particular application.</para>
            <para>Resource: /v1/appdata/global/{keys}</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_appdata_global_keys</para>
            </summary>
            <param name="keys">Keys of AppData that is desired.</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddGlobalAppData(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Creates global application data key/value pairs.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=PUT_v1_appdata_global</para>
            </summary>
            <param name="globalAppDataPairs">Key/value pairs that are to be added.</param>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.DeleteGlobalAppData(System.Collections.Generic.List{System.String})">
            <summary>
            <para>Removes global appdata for specified list of keys.</para>
            <para>Resource: /v1/appdata/global</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=DELETE_v1_appdata_global_keys</para>
            </summary>
            <param name="keys">List of keys that are to be deleted.</param>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendAppData(System.Int32)">
            <summary>
            <para>Returns application key/value data for applications assigned to the user's friends.</para>
            <para>Resource: /v1/users/{userId}/friends/appdata</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_appdata</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendAppData(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            <para>Returns application key/value data for applications assigned to the user's friends.</para>
            <para>Resource: /v1/users/{userId}/friends/appdata/{keys}</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_appdata_keys</para> 
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="keys">Keys of AppData that is desired.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddNotification(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Add notification Item</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Notifications</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/notifications/{userid}/@self</para>
            </summary>
            <param name="personId">Person posting notification</param>
            <param name="mediaItemUrl">V9 Media Item URL if to be added with notification</param>
            <param name="recipientIds">Comma seperated Ids of recipients</param>
            <param name="templateParams">Template parameters</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbums(System.String)">
            <summary>
            Get All albums of user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryParams} </para>
            </summary>
            <param name="personId">current user id</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbums(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Get All albums of user
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self?{queryParams} </para>
            </summary>
            <param name="personId">current user id</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.UpdateAlbum(System.String,System.String,System.String)">
            <summary>
            <para>Update the Album caption</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">current user id</param>
            <param name="albumId">Album id that needs to be updated</param>
            <param name="caption">New Caption </param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbumFields">
            <summary>
            <para>get album fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbumFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get album fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbum(System.String,System.String)">
            <summary>
            <para>get a perticular album</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Current user id</param>
            <param name="albumId">Album id that needs to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAlbum(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get a perticular album</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Albums</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/albums/{userid}/@self/{albumid} </para>
            </summary>
            <param name="personId">Current user id</param>
            <param name="albumId">Album id that needs to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddActivity(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">current Person Id</param>
            <param name="externalId">external Id</param>
            <param name="title">title of the activity</param>
            <param name="body">body of the activity</param>
            <param name="templateParams">Dictionary parameter</param>
            <param name="titleId">titleId of the activity</param>
            <returns>url of newly created activity</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyActivities(System.String)">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyActivities(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para></para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/activities/@me/@self</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendsActivities(System.String)">
            <summary>
            <para>get All friends activities</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@me/@friends?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendsActivities(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get All friends activities</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@me/@friends?{QueryParam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get activiy fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityFields">
            <summary>
            <para>get activiy fields</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityVerbs(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Activity verbs</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityVerbs">
            <summary>
            <para>get Activity verbs</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityObjectTypes">
            <summary>
            <para>get Activity Type objects</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetActivityObjectTypes(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Activity Type objects</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Activities</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMediaItemcomments(System.String,System.String,System.String)">
            <summary>
            <para>get Media item comments</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_MediaItemComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaitemcomments/{personId}/@self/{albumId}/{mediaItemId}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Album Id</param>
            <param name="mediaId">Photo Id whose comments are to be retrived</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMediaItemcomments(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Media item comments</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_MediaItemComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/mediaitemcomments/{personId}/@self/{albumId}/{mediaItemId}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="albumId">Album Id</param>
            <param name="mediaId">Photo Id whose comments are to be retrived</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyGroupsData(System.String)">
            <summary>
            <para>get my Groups</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@me?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyGroupsData(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get my Groups</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@me?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetGroupFields">
            <summary>
            <para>get Group fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetGroupFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Group fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_Groups</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/groups/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetCurrentUser">
            <summary>
            <para>Retrieves the basic information for OAuth token user.</para>
            <para>Resource: /v1/user</para>
            <para>Information that is returned: User ID, User URI, Web URI, Image URI, Large image URI, User type (e.g., RegularUser), Hashed data </para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_user</para>
            </summary>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPerson(System.String)">
            <summary>
            <para>Get current user profile data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@me/@self?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPerson(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get current user profile data</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@me/@self?{queryparam} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriends(System.String)">
            <summary>
            <para>get Current user Friends</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/{userid}/@friends </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriends(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Current user Friends</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/{userid}/@friends </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPeopleFields">
            <summary>
            <para>get Prople fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetPeopleFields(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Prople fields</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_People</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/people/@supportedFields </para>
            </summary>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendship(System.Int32,System.Int32[])">
            <summary>
            <para>Indicates whether the person(s) specified by {friendsId} are friends of the user specified by {userId}.</para>
            <para>Resource: /v1/users/{userId}/friends/{friendsId}</para>
            <para>Returned friendship/friend data includes: True/False flag in the "Are Friends" field.</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_friends_friendsId</para>
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <param name="friendIds">The list of friendIds to be checked against the userId for Friendship</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetIndicators(System.Int32)">
            <summary>
            <para>Returns the indicator URL for those indicators that are true; suppresses tags for indicators that are false.</para>
            <para>Resource: /v1/users/{userId}/indicators</para>
            <para>See more details at http://wiki.developer.myspace.com/index.php?title=GET_v1_users_userId_indicators</para> 
            </summary>
            <param name="userId">UserId belonging to the user whose protected resource is being requested.</param>
            <returns>A string with Json format.</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendStatusMood(System.String,System.String)">
            <summary>
            <para>get Feirnds status moods</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status is to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendStatusMood(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get Feirnds status moods</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid} </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status is to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendStatusMoodHistory(System.String,System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status history is to be featched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetFriendStatusMoodHistory(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="friendId">If of friends whose status history is to be featched</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyStatusMood(System.String)">
            <summary>
            <para>get My status mood</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyStatusMood(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get My status mood</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyStatusMoodHistory(System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyStatusMoodHistory(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAllFriendsStatusMoodHistory(System.String)">
            <summary>
            <para>get friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAllFriendsStatusMoodHistory(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get all friends status moods history</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAllFriendsStatusMood(System.String)">
            <summary>
            <para>get all friends status moods </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@me/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetAllFriendsStatusMood(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>get friends status moods </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{userid}/@friends/{friendid}/history </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.getUserStatusMoods(System.String)">
            <summary>
            <para>get user status moods</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.getUserStatusMood(System.String,System.Int32)">
            <summary>
            <para>get user status mood</para>
            <para>http://wiki.developer.myspace.com/index.php?title=OpenSocial_0.9_MediaItems</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/activities/@supportedFields </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyMoodComments(System.String,System.String)">
            <summary>
            <para>get comments on my Mood / status</para>
            <para>Details:http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMoodComments </para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmoodcomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="statusId">Id of Status</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.UpdateStatusMood(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <para>Update status mooood </para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMood</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/statusmood/{0}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="lattitude">Lattitude Optional</param>
            <param name="longitude">Longitude Optional</param>
            <param name="moodName">Name of mood to be updated</param>
            <param name="status">Updated Status that needs to be posted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddStatusComment(System.String,System.String,System.String)">
            <summary>
            <para>Add comments to status</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_StatusMoodComments</para>
            <para>Resourse: http://opensocial.myspace.com/roa/09/statusmoodcomments/{userid}/@self?{queryParams}</para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="statusId">Id of status on which comment is to be posted</param>
            <param name="comment">comment that needs to be posted</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyProfileComments(System.String)">
            <summary>
            <para>Get comments on current user profile</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_ProfileComments</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/profilecomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetMyProfileComments(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            <para>Get comments on current user profile</para>
            <para>Details: http://wiki.developer.myspace.com/index.php?title=OpenSocial_v0.9_ProfileComments</para>
            <para>Resourse:http://opensocial.myspace.com/roa/09/profilecomments/{userid}/@self </para>
            </summary>
            <param name="personId">Id of current user</param>
            <param name="queryParams">All the Supported filtering options will be added here</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.AddRealtimeStream(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <para>Add server to recive realtime stream</para>
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="rate">Transfer Rate</param>
            <param name="type">real Stream type</param>
            <param name="endpoint">location where strem is to be updated</param>
            <param name="query">query</param>
            <param name="metaData">metadata</param>
            <param name="batchSize">batchsize</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.GetRealtimeStream(System.String)">
            <summary>
            get the details of stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="RequestId">Id of stream</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.UpdateRealtimeStream(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update details of Stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="rate">Transfer Rate</param>
            <param name="type">real Stream type</param>
            <param name="endpoint">location where strem is to be updated</param>
            <param name="query">query</param>
            <param name="metaData">metadata</param>
            <param name="batchSize">batchsize</param>
            <param name="RequestId">Request Id which needs to be updated</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.DeleteRealtimeStream(System.String)">
            <summary>
            Delete the specific stream
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <param name="RequestId">Id of stream</param>
            <returns>Empty string</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.DeleteAllRealtimeStream">
            <summary>
            Delete All streams
            <para>http://wiki.developer.myspace.com/index.php?title=Stream_Subscription_Example_Walkthrough</para>
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="M:MySpaceID.SDK.MySpace.MySpace.SearchVideos(System.String)">
            <summary>
            Search Videos
            <para>http://api.myspace.com/opensearch/videos</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.MySpace.MySpace.SearchVideos(System.String,System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:MySpaceID.SDK.MySpace.MySpace.SearchImages(System.String)">
            <summary>
            Search Images
             <para>http://api.myspace.com/opensearch/images</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.MySpace.MySpace.SearchImages(System.String,System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:MySpaceID.SDK.MySpace.MySpace.SearchPeople(System.String)">
            <summary>
            Search People
             <para>http://api.myspace.com/opensearch/people</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.MySpace.MySpace.SearchPeople(System.String,System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="P:MySpaceID.SDK.MySpace.MySpace.OAuthTokenKey">
            <summary>
            O auth token key will be set only for Off site context
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.MySpace.MySpace.OAuthTokenSecret">
            <summary>
            Oauth token secret will be set only for Off site context
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Api.OpenSearch">
            <summary>
            <para>This Class will refer to all end points under Open search.</para>
            <para>Please refer to http://wiki.developer.myspace.com/index.php?title=Open_Search for full details on Open search</para>
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.OpenSearch.SearchVideos(System.String)">
            <summary>
            Search Videos
            <para>http://api.myspace.com/opensearch/videos</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.Api.OpenSearch.SearchVideos(System.String,System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:MySpaceID.SDK.Api.OpenSearch.SearchImages(System.String)">
            <summary>
            Search Images
             <para>http://api.myspace.com/opensearch/images</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MySpaceID.SDK.Api.OpenSearch.SearchImages(System.String,System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:MySpaceID.SDK.Api.OpenSearch.SearchPeople(System.String)">
            <summary>
            Search People
             <para>http://api.myspace.com/opensearch/people</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.OpenSearch.SearchPeople(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Search People
             <para>http://api.myspace.com/opensearch/people</para>
            </summary>
            <param name="searchTerm">Text to be searched</param>
            <param name="queryParams">List Of All the Parameters in search Query </param>
            <returns></returns>
        </member>
        <member name="T:MySpaceID.SDK.Config.V1Endpoints">
            <summary>
            Class that defines the REST API V1 Endpoints.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V2.Self">
            <summary>
            The result from a call to get Self through Portable Contacts.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.Person">
            <summary>
            Contains information about a specific user Profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.displayName">
            <summary>
            The Profile's display name.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.hasApp">
            <summary>
            Flag to show whether user has got MySpace Applications or not.
            </summary>            
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.id">
            <summary>
            The unique id of User profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.msUserType">
            <summary>
            The type of User.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.profileUrl">
            <summary>
            The url of user profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.thumbnailUrl">
            <summary>
            The thumbnailUrl of user profile.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.RoaApi.Person.name">
            <summary>
            The name of user profile.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.RoaApi.UserProfile">
            <summary>
            Contains a list of the user's Profile.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Constants">
            <summary>
            Contains constants for various points in the SDK.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserMood">
            <summary>
            Contains mood information for a user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserMood.Mood">
            <summary>
            User's current mood.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserMood.MoodId">
            <summary>
            The id of the user's current mood.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserMood.MoodImageUrl">
            <summary>
            The URI of the image of the user's current mood.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserMood.MoodLastUpdated">
            <summary>
            The timestamp of when the user last updated his/her mood.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserMood.User">
            <summary>
            The basic profile of the user.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserStatus">
            <summary>
            Contains status information for a user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserStatus.Status">
            <summary>
            User's current status.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.UserVideos">
            <summary>
            Contains video data for the videos of a user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserVideos.Count">
            <summary>
            The count of videos for the user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserVideos.User">
            <summary>
            The basic profile of the user.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.UserVideos.Videos">
            <summary>
            A list of all videos for the user.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.V1.Video">
            <summary>
            Contains information about a specific user video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Country">
            <summary>
            The country of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.DateCreated">
            <summary>
            Timestamp of when the video was created.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.DateUpdated">
            <summary>
            Timestamp of when the video was last updated.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Description">
            <summary>
            A description of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Id">
            <summary>
            A unique id of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Language">
            <summary>
            The language of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.MediaStatus">
            <summary>
            The media status of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.MediaType">
            <summary>
            The media type fo the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Privacy">
            <summary>
            The user-defined privacy settings for the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.ResourceUserId">
            <summary>
            The id of the user that owns this video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Runtime">
            <summary>
            The runtime of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Thumbnail">
            <summary>
            The URI to the thumbnail of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.Title">
            <summary>
            The title of the video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.TotalComments">
            <summary>
            The total number of comments made about this video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.TotalRating">
            <summary>
            The total rating given to this video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.TotalViews">
            <summary>
            The total views that this video has had.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.TotalVotes">
            <summary>
            The total votes made for this video.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.VideoUri">
            <summary>
            The URI for this video within the REST API.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Models.V1.Video.User">
            <summary>
            The basic profile of the user.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchPeopleWrapper">
            <summary>
            This class is the wrapper class used to hold people search data.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchResultPeople">
            <summary>
            Contains a people search result.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchImageWrapper">
            <summary>
            This class is the wrapper class used to hold images search data.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Models.Search.SearchResultImages">
            <summary>
            Contains an images search result.
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Config.MySpaceException">
            <summary>
            Exception class to handle exceptions unique to MySpaceID SDK>
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Config.MySpaceException.Code">
            <summary>
            Internal error code.
            </summary>
        </member>
        <member name="P:MySpaceID.SDK.Config.MySpaceException.Response">
            <summary>
            HTTP response
            </summary>
        </member>
        <member name="T:MySpaceID.SDK.Api.ActivityStream">
            <summary>
            <para>This Class will refer to all end points under activity stream.</para>
            <para>Please refer to http://wiki.developer.myspace.com/index.php?title=Category:ActivityStreams  for full details on Activity Stream</para>
            </summary>
        </member>
        <member name="M:MySpaceID.SDK.Api.ActivityStream.GetMyActivityStream(System.Int64)">
            <summary>
            Return All Activity list of current user in Json format
            </summary>
            <param name="userId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.ActivityStream.GetMyActivityStream(System.Int64,System.Int32,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Return All Activity list of current user
            <para> http://wiki.developer.myspace.com/index.php?title=ActivityStream_Queries </para>
            </summary>
            <param name="userId">Id of current user</param>
            <param name="pageSize">Total number of records to be returned(Max size = 50)</param>
            <param name="featchFrom">Date from which the records to be featched(Max 60 days back)</param>
            <param name="ActivityType">List of activity types to be returned </param>
            <param name="extension">list of options syndicating the activity stream</param>
            <returns>Response string Json format</returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.ActivityStream.GetFriendsActivityStream(System.Int64)">
            <summary>
            Return All Activity list of current user in Json format
            </summary>
            <param name="userId">Id of current user</param>
            <returns></returns>
        </member>
        <member name="M:MySpaceID.SDK.Api.ActivityStream.GetFriendsActivityStream(System.Int64,System.Int32,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Return All Activity list of current user
            <para> http://wiki.developer.myspace.com/index.php?title=ActivityStream_Queries </para>
            </summary>
            <param name="userId">Id of current user</param>
            <param name="pageSize">Total number of records to be returned(Max size = 50)</param>
            <param name="featchFrom">Date from which the records to be featched(Max 60 days back)</param>
            <param name="ActivityType">List of activity types to be returned </param>
            <param name="extension">list of options syndicating the activity stream</param>
            <returns>Response string Json format</returns>
        </member>
    </members>
</doc>
